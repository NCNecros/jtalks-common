<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

    <bean id="exceptionTranslationInterceptor"
          class="org.springframework.dao.support.PersistenceExceptionTranslationInterceptor"/>

    <!--Declaration of AOP Config -->
    <aop:config>
        <aop:advisor advice-ref="exceptionTranslationInterceptor"
                     pointcut="execution(* org.jtalks.common.model.dao.ChildRepository+.* (*))"/>
    </aop:config>

    <!--Declaration of DAO beans -->
    <bean id="userDAO"
          class="org.jtalks.common.model.dao.hibernate.UserHibernateDAO"
          parent="abstractHibernateDAO"/>
    <!--Injecting sessionFactory bean to class AbstractHibernateChildRepository, this way
resolves a problem of multiple DAO beans definition -->
    <bean id="abstractHibernateDAO"
          class="org.jtalks.common.model.dao.hibernate.AbstractHibernateChildRepository"
          abstract="true">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <!--Declaration and setting up datasource, sessionFactory and transactionalManager
   beans -->

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username:root}"/>
        <property name="password" value="${jdbc.password:root}"/>
    </bean>
    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingResources">
            <list>
                <value>/org/jtalks/common/model/entity/User.hbm.xml</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.query.factory_class">
                    org.hibernate.hql.ast.ASTQueryTranslatorFactory
                </prop>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.connection.charset">${encoding}</prop>
                <prop key="hibernate.connection.provider_class">${hibernate.connection.provider_class}</prop>
                <prop key="hibernate.connection.release_mode">auto</prop>
                <prop key="hibernate.cache.region.factory_class">
                    net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory
                </prop>
                <prop key="hibernate.cache.use_second_level_cache">${hibernate.use_second_level_cache}</prop>
                <prop key="hibernate.cache.use_query_cache">${hibernate.use_query_cache}</prop>
                <prop key="net.sf.ehcache.configurationResourceName">
                    /org/jtalks/common/model/entity/ehcache.xml
                </prop>
                <prop key="hibernate.generate_statistics">${hibernate.generate_statistics}</prop>
            </props>
        </property>
    </bean>
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>
    <bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="location" value="classpath:/org/jtalks/common/model/datasource.properties"/>
    </bean>
</beans>

